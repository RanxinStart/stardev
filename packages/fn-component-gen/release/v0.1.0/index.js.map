{"version":3,"file":"index.js","sources":["../utils/env.ts","../hooks/functionComponent.ts"],"sourcesContent":["// import { createApp } from 'vue'\r\nimport type { App, Plugin } from 'vue'\r\n\r\n// export let containers: App | null = null\r\n\r\n// export function setApp(app: App) {\r\n//   containers = app\r\n// }\r\n\r\n// export function getApp() {\r\n//   return containers\r\n// }\r\n\r\nexport const pluginList = new Set<Plugin>()\r\nexport function setPlugin(plugin: Plugin) {\r\n  if (pluginList.has(plugin)) {\r\n    return\r\n  }\r\n  pluginList.add(plugin)\r\n}\r\nexport function installPlugins(app: App) {\r\n  pluginList.forEach((plugin) => {\r\n    app.use(plugin)\r\n  })\r\n}\r\n","import { createApp, ref, type Component, ExtractPropTypes, getCurrentInstance, Ref, App } from 'vue'\r\nimport { installPlugins } from '../utils/env'\r\n\r\ninterface IUseFunctionComponentAgr<T extends Component> {\r\n  component: T\r\n  props?: ExtractPropTypes<T>\r\n}\r\n\r\n// 用于存储每个弹窗实例的变量和方法\r\nconst popupInstanceMap = new Map<\r\n  symbol,\r\n  {\r\n    visible: Ref<boolean>\r\n    confirm: (res: any) => void\r\n    close: (rej: any) => void\r\n  }\r\n>()\r\n\r\n/**\r\n * @name 使用Popup的可见性变量\r\n * @description 获取当前组件实例的popup可见性\r\n * @returns Ref<boolean>\r\n */\r\nexport function usePopupVisible(): Ref<boolean> {\r\n  const instance = getCurrentInstance()\r\n  const key = instance?.appContext.config.globalProperties.__popupKey\r\n  if (!key) {\r\n    throw new Error('usePopupVisible需要在使用useFunctionComponent的组件中调用')\r\n  }\r\n  const inst = popupInstanceMap.get(key)\r\n  if (!inst) {\r\n    throw new Error('找不到对应的popup实例')\r\n  }\r\n  return inst.visible\r\n}\r\n\r\n/**\r\n * @name 使用Popup的确认和关闭方法\r\n * @description 获取当前组件实例的popup确认和关闭方法\r\n * @returns { confirm: Function, close: Function }\r\n */\r\nexport function usePopupMethods() {\r\n  const instance = getCurrentInstance()\r\n  const key = instance?.appContext.config.globalProperties.__popupKey\r\n  if (!key) {\r\n    throw new Error('usePopupMethods需要在使用useFunctionComponent的组件中调用')\r\n  }\r\n  const inst = popupInstanceMap.get(key)\r\n  if (!inst) {\r\n    throw new Error('找不到对应的popup实例')\r\n  }\r\n  return {\r\n    confirm: inst.confirm,\r\n    close: inst.close\r\n  }\r\n}\r\n\r\n/**\r\n * @name 使用Popup的所有变量\r\n * @description 获取当前组件实例的popup的所有变量和方法\r\n * @returns { visible: Ref<boolean>, confirm: Function, close: Function }\r\n */\r\nexport function usePopupAll() {\r\n  const visible = usePopupVisible()\r\n  const { confirm, close } = usePopupMethods()\r\n  return {\r\n    visible,\r\n    confirm,\r\n    close\r\n  }\r\n}\r\n\r\n/**\r\n * @name useFunctionComponent\r\n * @description 使用函数式组件\r\n * @param component 组件\r\n * @param props 组件props\r\n * @returns Promise\r\n */\r\nexport function useFunctionComponent<T extends Component>({\r\n  component,\r\n  props\r\n}: IUseFunctionComponentAgr<T>) {\r\n  const visibleRef = ref(false)\r\n  // 为每个弹窗实例生成唯一key\r\n  const popupKey = Symbol('popupKey')\r\n  return new Promise((resolve, reject) => {\r\n    const mountNode = document.createElement('div')\r\n\r\n    let mountComponent: App | undefined\r\n\r\n    // 存储当前实例的变量和方法\r\n    popupInstanceMap.set(popupKey, {\r\n      visible: visibleRef,\r\n      close: (rej: any) => {\r\n        reject(rej)\r\n        remove()\r\n      },\r\n      confirm: (res: any) => {\r\n        resolve(res)\r\n        remove()\r\n      }\r\n    })\r\n\r\n    mountComponent = createApp(component, props)\r\n\r\n    // 注入popupKey到全局属性\r\n    mountComponent.config.globalProperties.__popupKey = popupKey\r\n\r\n    function remove() {\r\n      visibleRef.value = false\r\n      setTimeout(() => {\r\n        mountComponent?.unmount()\r\n        document.body.removeChild(mountNode)\r\n        mountComponent = undefined\r\n        popupInstanceMap.delete(popupKey)\r\n      }, 1000)\r\n    }\r\n\r\n    // 挂载插件\r\n    installPlugins(mountComponent)\r\n    // 创建挂载节点\r\n    document.body.appendChild(mountNode)\r\n    // 挂载组件实例\r\n    mountComponent.mount(mountNode)\r\n\r\n    setTimeout(() => {\r\n      visibleRef.value = true\r\n    })\r\n\r\n    // 路由变化 关闭弹窗 // TODO 还可以优化\r\n    function popstateFn() {\r\n      reject('back')\r\n      remove()\r\n      window.removeEventListener('popstate', popstateFn)\r\n    }\r\n    window.addEventListener('popstate', popstateFn)\r\n  })\r\n}\r\n"],"names":["pluginList","setPlugin","plugin","installPlugins","app","popupInstanceMap","usePopupVisible","key","getCurrentInstance","inst","usePopupMethods","usePopupAll","visible","confirm","close","useFunctionComponent","component","props","visibleRef","ref","popupKey","resolve","reject","mountNode","mountComponent","rej","remove","res","createApp","popstateFn"],"mappings":"iEAaO,MAAMA,EAAa,IAAI,IACvB,SAASC,EAAUC,EAAgB,CACpCF,EAAW,IAAIE,CAAM,GAGzBF,EAAW,IAAIE,CAAM,CACvB,CACO,SAASC,EAAeC,EAAU,CACvCJ,EAAW,QAASE,GAAW,CAC7BE,EAAI,IAAIF,CAAM,CAChB,CAAC,CACH,CCfA,MAAMG,EAAmB,IAAI,IActB,SAASC,GAAgC,CAE9C,MAAMC,EADWC,KACK,WAAW,OAAO,iBAAiB,WACzD,GAAI,CAACD,EACH,MAAM,IAAI,MAAM,uGAAgD,EAElE,MAAME,EAAOJ,EAAiB,IAAIE,CAAG,EACrC,GAAI,CAACE,EACH,MAAM,IAAI,MAAM,uDAAe,EAEjC,OAAOA,EAAK,OACd,CAOO,SAASC,GAAkB,CAEhC,MAAMH,EADWC,EAAAA,GACK,WAAW,OAAO,iBAAiB,WACzD,GAAI,CAACD,EACH,MAAM,IAAI,MAAM,uGAAgD,EAElE,MAAME,EAAOJ,EAAiB,IAAIE,CAAG,EACrC,GAAI,CAACE,EACH,MAAM,IAAI,MAAM,uDAAe,EAEjC,MAAO,CACL,QAASA,EAAK,QACd,MAAOA,EAAK,KACd,CACF,CAOO,SAASE,GAAc,CAC5B,MAAMC,EAAUN,IACV,CAAE,QAAAO,EAAS,MAAAC,CAAM,EAAIJ,EAAA,EAC3B,MAAO,CACL,QAAAE,EACA,QAAAC,EACA,MAAAC,CACF,CACF,CASO,SAASC,EAA0C,CACxD,UAAAC,EACA,MAAAC,CACF,EAAgC,CAC9B,MAAMC,EAAaC,EAAI,EAAK,EAEtBC,EAAW,OAAO,UAAU,EAClC,OAAO,IAAI,QAAQ,CAACC,EAASC,IAAW,CACtC,MAAMC,EAAY,SAAS,cAAc,KAAK,EAE9C,IAAIC,EAGJnB,EAAiB,IAAIe,EAAU,CAC7B,QAASF,EACT,MAAQO,GAAa,CACnBH,EAAOG,CAAG,EACVC,EAAAA,CACF,EACA,QAAUC,GAAa,CACrBN,EAAQM,CAAG,EACXD,EAAAA,CACF,CACF,CAAC,EAEDF,EAAiBI,EAAUZ,EAAWC,CAAK,EAG3CO,EAAe,OAAO,iBAAiB,WAAaJ,EAEpD,SAASM,GAAS,CAChBR,EAAW,MAAQ,GACnB,WAAW,IAAM,CACfM,GAAgB,UAChB,SAAS,KAAK,YAAYD,CAAS,EACnCC,EAAiB,OACjBnB,EAAiB,OAAOe,CAAQ,CAClC,EAAG,GAAI,CACT,CAGAjB,EAAeqB,CAAc,EAE7B,SAAS,KAAK,YAAYD,CAAS,EAEnCC,EAAe,MAAMD,CAAS,EAE9B,WAAW,IAAM,CACfL,EAAW,MAAQ,EACrB,CAAC,EAGD,SAASW,GAAa,CACpBP,EAAO,MAAM,EACbI,IACA,OAAO,oBAAoB,WAAYG,CAAU,CACnD,CACA,OAAO,iBAAiB,WAAYA,CAAU,CAChD,CAAC,CACH"}